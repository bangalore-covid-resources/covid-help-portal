{"version":3,"sources":["constants/application-routes.js","constants/constants.js","components/main/header.js","components/dialogs/disclaimer-dialog.js","components/main/footer.js","components/main/home.js","components/main/not-found.js","components/custom/dropdown.js","helpers/helpers.js","components/help/help-details.js","components/dialogs/help-details-dialog.js","components/help/help-summary.js","router/routerConfig.js","App.js","reportWebVitals.js","index.js"],"names":["APPLICATION_URL","HOME","OXYGEN","AMBULANCE","PLASMA","REMDESIVIR","MEALS","HELP_CATEGORY","PROVIDER_STATUS","MENUS","MEDICINES","OTHER_HELP","NOT_AVAILABLE","Header","location","useLocation","Navbar","collapseOnSelect","expand","bg","variant","Toggle","Collapse","Nav","activeKey","pathname","Link","href","NavDropdown","title","Item","DisclaimerDialog","props","Modal","className","closeButton","Title","Body","Footer","Button","onClick","onHide","useState","showDisclaimer","setShowDisclaimer","window","open","show","Home","Container","style","height","Card","marginTop","backgroundColor","Text","Badge","NotFound","Dropdown","id","minWidth","Menu","items","map","name","index","event","setSelected","target","text","value","helpers","getStringValue","length","getStatusBadgeVariant","status","HelpDetails","category","provider","renderDetailRow","Row","Col","renderDetailArrayRow","v","renderStatusBadge","contact","alternateContacts","address","deposit","charge","availability","otherDetails","providerType","cost","bloodGroup","serviceAreas","serviceHours","deliveryOption","HelpDetailsDialog","HelpSummary","providers","setProviders","selectedProvider","setSelectedProvider","selectedState","setSelectedState","selectedLocation","setSelectedLocation","selectedBloodGroup","setSelectedBloodGroup","selectedProviderType","setSelectedProviderType","helpDetailsShow","setHelpDetailsShow","useEffect","loadHelpProviders","filteredProviders","filter","item","filterMatched","state","Oxygen","Ambulance","Plasma","remdesivir","Medicines","find","m","meals","Others","renderViewDetailsButton","size","fluid","charAt","toUpperCase","slice","uniqueLocations","Set","uniqueStates","uniqueBloodGroups","uniqueProviderTypes","md","renderFilters","flexBasis","maxWidth","renderOxygenProvider","renderAmbulanceProvider","renderPlasmaProvider","renderRemdesivirProvider","renderMealsProvider","RouterConfig","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7693cee6.chunk.js","sourcesContent":["const APPLICATION_URL = {\r\n  HOME: \"/\",\r\n  OXYGEN: \"/oxygen\",\r\n  AMBULANCE: \"/ambulance\",\r\n  PLASMA: \"/plasma\",\r\n  REMDESIVIR: \"/remdesivir\",\r\n  MEALS: \"/meals\",\r\n};\r\n\r\nexport default APPLICATION_URL;\r\n","export const HELP_CATEGORY = {\r\n  OXYGEN: \"oxygen\",\r\n  AMBULANCE: \"ambulance\",\r\n  PLASMA: \"plasma\",\r\n  REMDESIVIR: \"remdesivir\",\r\n  MEALS: \"meals\",\r\n};\r\n\r\nexport const PROVIDER_STATUS = {\r\n  VERIFIED: \"Verified\",\r\n  UNVERIFIED: \"Unverified\",\r\n  INPROGRESS: \"In Progress\",\r\n};\r\n\r\nexport const MENUS = {\r\n  HOME: \"Home\",\r\n  OXYGEN: \"Oxygen\",\r\n  PLASMA: \"Plasma\",\r\n  AMBULANCE: \"Ambulance\",\r\n  MEDICINES: \"Medicines\",\r\n  REMDESIVIR: \"Remdesivir\",\r\n  OTHERS: \"Others\",\r\n  MEALS: \"Meals\",\r\n};\r\n\r\nexport const MEDICINES = {\r\n  REMDESIVIR: \"Remdesivir\",\r\n};\r\n\r\nexport const OTHER_HELP = {\r\n  MEALS: \"Meals\",\r\n};\r\n\r\nexport const NOT_AVAILABLE = \"Unknown\";\r\n","import { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { useLocation } from \"react-router\";\r\nimport APPLICATION_URL from \"../../constants/application-routes\";\r\nimport { MENUS } from \"../../constants/constants\";\r\n\r\nfunction Header() {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Toggle />\r\n      <Navbar.Collapse>\r\n        <Nav activeKey={location.pathname}>\r\n          <Nav.Link href={APPLICATION_URL.HOME}>{MENUS.HOME}</Nav.Link>\r\n          <Nav.Link href={APPLICATION_URL.OXYGEN}>{MENUS.OXYGEN}</Nav.Link>\r\n          <Nav.Link href={APPLICATION_URL.AMBULANCE}>\r\n            {MENUS.AMBULANCE}\r\n          </Nav.Link>\r\n          <Nav.Link href={APPLICATION_URL.PLASMA}>{MENUS.PLASMA}</Nav.Link>\r\n          <NavDropdown title={MENUS.MEDICINES}>\r\n            <NavDropdown.Item href={APPLICATION_URL.REMDESIVIR}>\r\n              {MENUS.REMDESIVIR}\r\n            </NavDropdown.Item>\r\n          </NavDropdown>\r\n          <NavDropdown title={MENUS.OTHERS}>\r\n            <NavDropdown.Item href={APPLICATION_URL.MEALS}>\r\n              {MENUS.MEALS}\r\n            </NavDropdown.Item>\r\n          </NavDropdown>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { Modal, Button } from \"react-bootstrap\";\r\n\r\nfunction DisclaimerDialog(props) {\r\n  return (\r\n    <Modal {...props}>\r\n      <Modal.Header className=\"text-white bg-info text-center\" closeButton>\r\n        <Modal.Title className=\"w-100\">Disclaimer</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <p>\r\n          This is an initiative by a like minded volunteers to help the people\r\n          affected by Covid.\r\n        </p>\r\n        <p>\r\n          The information provided is curated from publicly available sources by\r\n          volunteers. We however, do not accept any responsibility or liability\r\n          for the accuracy, content, completeness,legality or reliability of the\r\n          information contained in any of these.\r\n        </p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default DisclaimerDialog;\r\n","import { Button } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\n\r\nimport DisclaimerDialog from \"../dialogs/disclaimer-dialog\";\r\n\r\nfunction Footer() {\r\n  const [showDisclaimer, setShowDisclaimer] = useState(false);\r\n\r\n  return (\r\n    <div className=\"jumbotron mb-0 fixed-bottom text-center p-2\">\r\n      <Button variant=\"link\" onClick={() => setShowDisclaimer(true)}>\r\n        Disclaimer\r\n      </Button>\r\n      <Button\r\n        variant=\"link\"\r\n        onClick={() =>\r\n          window.open(\"https://forms.gle/kVkmRjpf5G1KmaZn6\", \"_blank\")\r\n        }\r\n      >\r\n        Feedback\r\n      </Button>\r\n      <DisclaimerDialog\r\n        show={showDisclaimer}\r\n        onHide={() => setShowDisclaimer(false)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { Card, Container, Badge } from \"react-bootstrap\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <Container style={{ height: \"50vh\" }}>\r\n      <Card style={{ height: \"80%\", marginTop: \"4%\" }}>\r\n        <Card.Header className=\"text-white bg-info text-center\">\r\n          This is an initiative by a like minded volunteers to help the people\r\n          affected by Covid\r\n        </Card.Header>\r\n        <Card.Body style={{ backgroundColor: \"azure\" }}>\r\n          <Card.Text>\r\n            <p></p>\r\n            <p>\r\n              People affected by Covid may need help like finding the Oxygen,\r\n              Ambulance, Plasma, Medicines etc. Most of the sources while\r\n              finding these details are not credible and an ample amount of time\r\n              is wasted before getting the right help. The time wasted in this\r\n              process may lead to critical situation.\r\n            </p>\r\n            <p>\r\n              This portal aims at reducing this time by providing the details of\r\n              the credible sources frequently verified by our team of\r\n              volunteers.\r\n            </p>\r\n            <p>\r\n              <span>\r\n                <Badge variant=\"danger\">IMPORTANT</Badge>\r\n              </span>\r\n              <br />\r\n              Please do not panic and source the help unless it's absoutely\r\n              needed. This helps to reduce the burden on our Health care system\r\n              and make the help available to the absolutely needed.\r\n            </p>\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","function NotFound() {\r\n  return <h1>NotFound Page</h1>;\r\n}\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Dropdown as BootstrapDropdown } from \"react-bootstrap\";\r\n\r\nfunction Dropdown(props) {\r\n  return (\r\n    <BootstrapDropdown>\r\n      <BootstrapDropdown.Toggle\r\n        variant=\"info\"\r\n        id=\"dropdown\"\r\n        style={{ minWidth: \"100px\" }}\r\n      >\r\n        <span>{props.title}</span>\r\n      </BootstrapDropdown.Toggle>\r\n\r\n      <BootstrapDropdown.Menu>\r\n        {props.items.map((name, index) => (\r\n          <BootstrapDropdown.Item\r\n            key={index}\r\n            onClick={(event) => {\r\n              props.setSelected(event.target.text);\r\n            }}\r\n            value={name}\r\n          >\r\n            {name}\r\n          </BootstrapDropdown.Item>\r\n        ))}\r\n      </BootstrapDropdown.Menu>\r\n    </BootstrapDropdown>\r\n  );\r\n}\r\n\r\nexport default Dropdown;\r\n","import { NOT_AVAILABLE, PROVIDER_STATUS } from \"../constants/constants\";\r\n\r\nconst helpers = {\r\n  getStringValue(value) {\r\n    return value?.length > 0 ? value : NOT_AVAILABLE;\r\n  },\r\n\r\n  getStatusBadgeVariant(status) {\r\n    let variant = \"\";\r\n    switch (status) {\r\n      case PROVIDER_STATUS.UNVERIFIED:\r\n        variant = \"danger\";\r\n        break;\r\n      case PROVIDER_STATUS.VERIFIED:\r\n        variant = \"success\";\r\n        break;\r\n      case PROVIDER_STATUS.INPROGRESS:\r\n        variant = \"warning\";\r\n        break;\r\n      default:\r\n        variant = \"danger\";\r\n        break;\r\n    }\r\n    return variant;\r\n  },\r\n};\r\n\r\nexport default helpers;\r\n","import { Row, Col, Container, Badge } from \"react-bootstrap\";\r\n\r\nimport { HELP_CATEGORY, NOT_AVAILABLE } from \"../../constants/constants\";\r\nimport helpers from \"../../helpers/helpers\";\r\n\r\nfunction HelpDetails(props) {\r\n  const { category, provider } = props;\r\n\r\n  const renderDetailRow = (title, value) => {\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <label className=\"font-weight-bold\">{title}:</label>\r\n        </Col>\r\n        <Col>\r\n          <p>{helpers.getStringValue(value)}</p>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  const renderDetailArrayRow = (title, value) => {\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <label className=\"font-weight-bold\">{title}:</label>\r\n        </Col>\r\n        <Col>\r\n          <p>\r\n            {value?.length === 0 && NOT_AVAILABLE}\r\n            {value?.length !== 0 &&\r\n              value?.map((v) => {\r\n                return (\r\n                  <div>\r\n                    {v}\r\n                    <br />\r\n                  </div>\r\n                );\r\n              })}\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  const renderStatusBadge = (status) => {\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          {\" \"}\r\n          <label className=\"font-weight-bold\">Status:</label>\r\n        </Col>\r\n        <Col>\r\n          <Badge variant={helpers.getStatusBadgeVariant(status)}>\r\n            {status}\r\n          </Badge>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  const renderOxygenDetails = () => {\r\n    return (\r\n      <Container className=\"text-left\">\r\n        {renderDetailRow(\"Location\", provider.location)}\r\n        {renderDetailRow(\"Contact\", provider.contact)}\r\n        {renderDetailArrayRow(\"Alternate Contacts\", provider.alternateContacts)}\r\n        {renderDetailRow(\"Address\", provider.address)}\r\n        {renderDetailRow(\"Deposit\", provider.deposit)}\r\n        {renderDetailRow(\"Charge\", provider.charge)}\r\n        {renderDetailRow(\"Availability\", provider.availability)}\r\n        {renderDetailArrayRow(\"Other details\", provider.otherDetails)}\r\n        {renderStatusBadge(provider.status)}\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  const renderAmbulanceDetails = () => {\r\n    return (\r\n      <Container className=\"text-left\">\r\n        {renderDetailRow(\"Location\", provider.location)}\r\n        {renderDetailRow(\"Contact\", provider.contact)}\r\n        {renderDetailRow(\"Provider Type\", provider.providerType)}\r\n        {renderDetailArrayRow(\"Alternate Contacts\", provider.alternateContacts)}\r\n        {renderDetailRow(\"Cost\", provider.cost)}\r\n        {renderDetailArrayRow(\"Other Details\", provider.otherDetails)}\r\n        {renderStatusBadge(provider.status)}\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  const renderPlasmaDetails = () => {\r\n    return (\r\n      <Container className=\"text-left\">\r\n        {renderDetailRow(\"Location\", provider.location)}\r\n        {renderDetailRow(\"Contact\", provider.contact)}\r\n        {renderDetailRow(\"Blood Group\", provider.bloodGroup)}\r\n        {renderDetailArrayRow(\"Other Details\", provider.otherDetails)}\r\n        {renderStatusBadge(provider.status)}\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  const renderRemdesivirDetails = () => {\r\n    return (\r\n      <Container className=\"text-left\">\r\n        {renderDetailRow(\"Location\", provider.location)}\r\n        {renderDetailRow(\"Contact\", provider.contact)}\r\n        {renderDetailArrayRow(\"Alternate Contacts\", provider.alternateContacts)}\r\n        {renderDetailRow(\"Availability\", provider.availability)}\r\n        {renderDetailArrayRow(\"Other Details\", provider.otherDetails)}\r\n        {renderStatusBadge(provider.status)}\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  const renderMealsDetails = () => {\r\n    return (\r\n      <Container className=\"text-left\">\r\n        {renderDetailRow(\"Location\", provider.location)}\r\n        {renderDetailRow(\"Contact\", provider.contact)}\r\n        {renderDetailRow(\"Provider Type\", provider.providerType)}\r\n        {renderDetailRow(\"Service Areas\", provider.serviceAreas)}\r\n        {renderDetailRow(\"Service Hours\", provider.serviceHours)}\r\n        {renderDetailRow(\"Delivery Option\", provider.deliveryOption)}\r\n        {renderDetailRow(\"Cost\", provider.cost)}\r\n        {renderDetailArrayRow(\"Alternate Contacts\", provider.alternateContacts)}\r\n        {renderDetailArrayRow(\"Other Details\", provider.otherDetails)}\r\n        {renderStatusBadge(provider.status)}\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {category === HELP_CATEGORY.OXYGEN && renderOxygenDetails()}\r\n      {category === HELP_CATEGORY.AMBULANCE && renderAmbulanceDetails(provider)}\r\n      {category === HELP_CATEGORY.PLASMA && renderPlasmaDetails(provider)}\r\n      {category === HELP_CATEGORY.REMDESIVIR &&\r\n        renderRemdesivirDetails(provider)}\r\n      {category === HELP_CATEGORY.MEALS && renderMealsDetails(provider)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HelpDetails;\r\n","import { Modal, Button } from \"react-bootstrap\";\r\nimport HelpDetails from \"../help/help-details\";\r\n\r\nfunction HelpDetailsDialog(props) {\r\n  const { category, provider } = props;\r\n  return (\r\n    <Modal {...props}>\r\n      <Modal.Header className=\"text-white bg-info text-center\" closeButton>\r\n        <Modal.Title className=\"w-100\">{provider.name}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <HelpDetails category={category} provider={provider} />\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default HelpDetailsDialog;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Card, Button, Row, Col, Container, Badge } from \"react-bootstrap\";\r\n\r\nimport Dropdown from \"../custom/dropdown\";\r\n\r\nimport * as Oxygen from \"../../content/data/oxygen.json\";\r\nimport * as Ambulance from \"../../content/data/ambulance.json\";\r\nimport * as Plasma from \"../../content/data/plasma.json\";\r\nimport * as Medicines from \"../../content/data/medicines.json\";\r\nimport * as Others from \"../../content/data/others.json\";\r\n\r\nimport {\r\n  HELP_CATEGORY,\r\n  MEDICINES,\r\n  OTHER_HELP,\r\n} from \"../../constants/constants\";\r\nimport helpers from \"../../helpers/helpers\";\r\nimport HelpDetailsDialog from \"../dialogs/help-details-dialog\";\r\n\r\nfunction HelpSummary(props) {\r\n  const [providers, setProviders] = useState([]);\r\n  const [selectedProvider, setSelectedProvider] = useState({});\r\n  const [selectedState, setSelectedState] = useState(\"\");\r\n  const [selectedLocation, setSelectedLocation] = useState(\"\");\r\n  const [selectedBloodGroup, setSelectedBloodGroup] = useState(\"\");\r\n  const [selectedProviderType, setSelectedProviderType] = useState(\"\");\r\n  const [helpDetailsShow, setHelpDetailsShow] = useState(false);\r\n  const { category } = props;\r\n\r\n  useEffect(() => {\r\n    loadHelpProviders();\r\n  });\r\n\r\n  const filteredProviders = providers.filter((item) => {\r\n    let filterMatched = true;\r\n    if (selectedState) {\r\n      filterMatched = item.state === selectedState;\r\n    }\r\n    if (filterMatched && selectedLocation) {\r\n      filterMatched = item.location === selectedLocation;\r\n    }\r\n    if (filterMatched && selectedBloodGroup) {\r\n      filterMatched = item.bloodGroup === selectedBloodGroup;\r\n    }\r\n    if (filterMatched && selectedProviderType) {\r\n      filterMatched = item.providerType === selectedProviderType;\r\n    }\r\n    return filterMatched;\r\n  });\r\n\r\n  const loadHelpProviders = () => {\r\n    switch (category) {\r\n      case HELP_CATEGORY.OXYGEN:\r\n        setProviders(Oxygen.providers);\r\n        break;\r\n      case HELP_CATEGORY.AMBULANCE:\r\n        setProviders(Ambulance.providers);\r\n        break;\r\n      case HELP_CATEGORY.PLASMA:\r\n        setProviders(Plasma.providers);\r\n        break;\r\n      case HELP_CATEGORY.REMDESIVIR:\r\n        const remdesivir = Medicines.medicines.find(\r\n          (m) => m.name === MEDICINES.REMDESIVIR\r\n        );\r\n        setProviders(remdesivir.providers);\r\n        break;\r\n      case HELP_CATEGORY.MEALS:\r\n        const meals = Others.helpCategories.find(\r\n          (m) => m.name === OTHER_HELP.MEALS\r\n        );\r\n        setProviders(meals.providers);\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  const renderDetailRow = (title, value) => {\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <label className=\"font-weight-bold\">{title}:</label>\r\n        </Col>\r\n        <Col>\r\n          <p>{helpers.getStringValue(value)}</p>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  const renderStatusBadge = (status) => {\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          {\" \"}\r\n          <label className=\"font-weight-bold\">Status:</label>\r\n        </Col>\r\n        <Col>\r\n          <Badge variant={helpers.getStatusBadgeVariant(status)}>\r\n            {status}\r\n          </Badge>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  const renderViewDetailsButton = (provider) => {\r\n    return (\r\n      <Button\r\n        className=\"float-right\"\r\n        size=\"sm\"\r\n        variant=\"primary\"\r\n        onClick={() => {\r\n          setSelectedProvider(provider);\r\n          setHelpDetailsShow(true);\r\n        }}\r\n      >\r\n        View details\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  const renderOxygenProvider = (provider) => {\r\n    return (\r\n      <Container className=\"text-left\" style={{ flexBasis: \"25%\" }}>\r\n        <Card className=\"mb-3\" style={{ maxWidth: \"400px\" }}>\r\n          <Card.Header className=\"text-white bg-info text-center\">\r\n            {provider.name}\r\n          </Card.Header>\r\n          <Card.Body style={{ backgroundColor: \"azure\" }}>\r\n            <Card.Text>\r\n              {renderDetailRow(\"Location\", provider.location)}\r\n              {renderDetailRow(\"Contact\", provider.contact)}\r\n              {renderDetailRow(\"Availability\", provider.availability)}\r\n              {renderStatusBadge(provider.status)}\r\n            </Card.Text>\r\n            {renderViewDetailsButton(provider)}\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  const renderAmbulanceProvider = (provider) => {\r\n    return (\r\n      <Container className=\"text-left\" style={{ flexBasis: \"25%\" }}>\r\n        <Card className=\"mb-3\" style={{ maxWidth: \"400px\" }}>\r\n          <Card.Header className=\"text-white bg-info text-center\">\r\n            {provider.name}\r\n          </Card.Header>\r\n          <Card.Body style={{ backgroundColor: \"azure\" }}>\r\n            <Card.Text>\r\n              {renderDetailRow(\"Location\", provider.location)}\r\n              {renderDetailRow(\"Contact\", provider.contact)}\r\n              {renderDetailRow(\"Provider Type\", provider.providerType)}\r\n              {renderStatusBadge(provider.status)}\r\n            </Card.Text>\r\n            {renderViewDetailsButton(provider)}\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  const renderPlasmaProvider = (provider) => {\r\n    return (\r\n      <Container className=\"text-left\" style={{ flexBasis: \"25%\" }}>\r\n        <Card className=\"mb-3\" style={{ maxWidth: \"400px\" }}>\r\n          <Card.Header className=\"text-white bg-info text-center\">\r\n            {provider.name}\r\n          </Card.Header>\r\n          <Card.Body style={{ backgroundColor: \"azure\" }}>\r\n            <Card.Text>\r\n              {renderDetailRow(\"Location\", provider.location)}\r\n              {renderDetailRow(\"Contact\", provider.contact)}\r\n              {renderDetailRow(\"Blood Group\", provider.bloodGroup)}\r\n              {renderStatusBadge(provider.status)}\r\n            </Card.Text>\r\n            {renderViewDetailsButton(provider)}\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  const renderRemdesivirProvider = (provider) => {\r\n    return (\r\n      <Container className=\"text-left\" style={{ flexBasis: \"25%\" }}>\r\n        <Card className=\"mb-3\" style={{ maxWidth: \"400px\" }}>\r\n          <Card.Header className=\"text-white bg-info text-center\">\r\n            {provider.name}\r\n          </Card.Header>\r\n          <Card.Body style={{ backgroundColor: \"azure\" }}>\r\n            <Card.Text>\r\n              {renderDetailRow(\"Location\", provider.location)}\r\n              {renderDetailRow(\"Contact\", provider.contact)}\r\n              {renderDetailRow(\"Availability\", provider.availability)}\r\n              {renderStatusBadge(provider.status)}\r\n            </Card.Text>\r\n            {renderViewDetailsButton(provider)}\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  const renderMealsProvider = (provider) => {\r\n    return (\r\n      <Container className=\"text-left\" style={{ flexBasis: \"25%\" }}>\r\n        <Card className=\"mb-3\" style={{ maxWidth: \"400px\" }}>\r\n          <Card.Header className=\"text-white bg-info text-center\">\r\n            {provider.name}\r\n          </Card.Header>\r\n          <Card.Body style={{ backgroundColor: \"azure\" }}>\r\n            <Card.Text>\r\n              {renderDetailRow(\"Location\", provider.location)}\r\n              {renderDetailRow(\"Contact\", provider.contact)}\r\n              {renderDetailRow(\"Provider Type\", provider.providerType)}\r\n              {renderDetailRow(\"Service Hours\", provider.serviceHours)}\r\n              {renderStatusBadge(provider.status)}\r\n            </Card.Text>\r\n            {renderViewDetailsButton(provider)}\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  const renderFilters = () => {\r\n    const uniqueLocations = [\r\n      ...new Set(providers.map((provider) => provider.location)),\r\n    ];\r\n    const uniqueStates = [\r\n      ...new Set(providers.map((provider) => provider.state)),\r\n    ];\r\n    const uniqueBloodGroups = [\r\n      ...new Set(providers.map((provider) => provider.bloodGroup)),\r\n    ];\r\n    const uniqueProviderTypes = [\r\n      ...new Set(providers.map((provider) => provider.providerType)),\r\n    ];\r\n    return (\r\n      <Row className=\"mb-5\">\r\n        <Col md=\"1\" className=\"mb-1\">\r\n          <Dropdown\r\n            title=\"State\"\r\n            items={uniqueStates}\r\n            setSelected={setSelectedState}\r\n          />\r\n        </Col>\r\n        <Col md=\"1\" className=\"mb-1\">\r\n          <Dropdown\r\n            title=\"City\"\r\n            items={uniqueLocations}\r\n            setSelected={setSelectedLocation}\r\n          />\r\n        </Col>\r\n        {category === HELP_CATEGORY.PLASMA && (\r\n          <Col md=\"1\" className=\"mb-1\">\r\n            <Dropdown\r\n              title=\"Blood Group\"\r\n              items={uniqueBloodGroups}\r\n              setSelected={setSelectedBloodGroup}\r\n            />\r\n          </Col>\r\n        )}\r\n        {category === HELP_CATEGORY.MEALS && (\r\n          <Col>\r\n            <Dropdown\r\n              title=\"Provider Type\"\r\n              items={uniqueProviderTypes}\r\n              setSelected={setSelectedProviderType}\r\n            />\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container fluid>\r\n      <div\r\n        className=\"mb-5 mt-5 text-center border\"\r\n        style={{ backgroundColor: \"azure\", height: \"5%\" }}\r\n      >\r\n        <h1>\r\n          {category.charAt(0).toUpperCase() + category.slice(1)} Providers\r\n        </h1>\r\n      </div>\r\n      {renderFilters()}\r\n      <div className=\"d-flex flex-wrap\">\r\n        {category === HELP_CATEGORY.OXYGEN &&\r\n          filteredProviders.map((provider) => renderOxygenProvider(provider))}\r\n        {category === HELP_CATEGORY.AMBULANCE &&\r\n          filteredProviders.map((provider) =>\r\n            renderAmbulanceProvider(provider)\r\n          )}\r\n        {category === HELP_CATEGORY.PLASMA &&\r\n          filteredProviders.map((provider) => renderPlasmaProvider(provider))}\r\n        {category === HELP_CATEGORY.REMDESIVIR &&\r\n          filteredProviders.map((provider) =>\r\n            renderRemdesivirProvider(provider)\r\n          )}\r\n        {category === HELP_CATEGORY.MEALS &&\r\n          filteredProviders.map((provider) => renderMealsProvider(provider))}\r\n      </div>\r\n      <HelpDetailsDialog\r\n        category={category}\r\n        provider={selectedProvider}\r\n        show={helpDetailsShow}\r\n        onHide={() => setHelpDetailsShow(false)}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default HelpSummary;\r\n","import { Route, Switch } from \"react-router-dom\";\r\n\r\nimport Home from \"../components/main/home\";\r\nimport NotFound from \"../components/main/not-found\";\r\nimport HelpSummary from \"../components/help/help-summary\";\r\nimport APPLICATION_URL from \"../constants/application-routes\";\r\n\r\nimport { HELP_CATEGORY } from \"../constants/constants\";\r\n\r\nconst RouterConfig = () => (\r\n  <div className=\"mt-3 mb-5\">\r\n    <Switch>\r\n      <Route exact path={APPLICATION_URL.HOME} component={Home} />\r\n      <Route path={APPLICATION_URL.OXYGEN}>\r\n        <HelpSummary category={HELP_CATEGORY.OXYGEN} />\r\n      </Route>\r\n      <Route path={APPLICATION_URL.AMBULANCE}>\r\n        <HelpSummary category={HELP_CATEGORY.AMBULANCE} />\r\n      </Route>\r\n      <Route path={APPLICATION_URL.PLASMA}>\r\n        <HelpSummary category={HELP_CATEGORY.PLASMA} />\r\n      </Route>\r\n      <Route path={APPLICATION_URL.REMDESIVIR}>\r\n        <HelpSummary category={HELP_CATEGORY.REMDESIVIR} />\r\n      </Route>\r\n      <Route path={APPLICATION_URL.MEALS}>\r\n        <HelpSummary category={HELP_CATEGORY.MEALS} />\r\n      </Route>\r\n\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nexport default RouterConfig;\r\n","import { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport Header from \"./components/main/header\";\r\nimport Footer from \"./components/main/footer\";\r\nimport RouterConfig from \"./router/routerConfig\";\r\n\r\n\r\nimport \"./content/styles/App.scss\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <RouterConfig />\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}